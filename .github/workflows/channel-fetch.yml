name: Fetch and Merge EPG Channel Info

on:
  workflow_dispatch:  # Allows manual triggering of this workflow
  schedule:
    - cron: '0 6,18 * * *'  # Runs at 6:00 AM and 6:00 PM UTC (1:00 AM and 1:00 PM ET)

concurrency:
  group: epg-fetch-merge
  cancel-in-progress: true

jobs:
  channel-fetch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'  # Use the latest LTS version of Node.js

      - name: Install dependencies
        run: |
          npm install  # Install dependencies defined in package.json

      - name: Fetch EPG channel data and merge into XML
        run: |
          current_datetime=$(date '+%Y-%m-%d-%H-%M-%S')  # Get current date-time in the format you want

          output_file="./scripts/_epg-end/channels-test-${current_datetime}.xml"  # Dynamic filename
          npm run grab -- --channels=./scripts/_epg-start/channels-test-start.xml --output="$output_file"
          
          echo "Fetching and merging EPG channel data..."

          # You can also use the following if it's part of your script:
          # npx tsx scripts/commands/epg/grab.ts --channels=./scripts/_epg-start/channels-custom-start.xml --output=./scripts/_epg-end/merged-epg.xml
          
          # Handle errors if necessary
          if [ $? -ne 0 ]; then
            echo "Error fetching or merging EPG data."
            exit 1
          fi

      - name: Auto commit all .xml files in _epg-end directory
        run: |
            git config --global user.name "kyleabrahams"
            git config --global user.email "kyleagbc@gmail.com"
            
            # Add all .xml files in _epg-end directory
            git add scripts/_epg-end/*.xml
            
            # Commit changes (if any)
            git commit --allow-empty -m "Auto commit: Merged EPG data on $(date)"
            
            # Display git status to debug
            git status
            
            # Push the changes to the repository (force push if necessary)
            git push origin main || git push origin main --force
        